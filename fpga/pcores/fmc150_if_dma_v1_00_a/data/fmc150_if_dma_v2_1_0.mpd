###################################################################
##
## Name     : fmc150_if_dma
## Desc     : Microprocessor Peripheral Description
##          : Automatically generated by PsfUtility
##
###################################################################

BEGIN fmc150_if_dma

## Peripheral Options
OPTION IPTYPE = PERIPHERAL
OPTION IMP_NETLIST = TRUE
OPTION HDL = MIXED
OPTION IP_GROUP = MICROBLAZE:USER
OPTION STYLE = MIX
OPTION RUN_NGCBUILD = TRUE


## Bus Interfaces
BUS_INTERFACE BUS = S_AXI, BUS_STD = AXI, BUS_TYPE = SLAVE

## Generics for VHDL or Parameters for Verilog
PARAMETER C_S_AXI_DATA_WIDTH = 32, DT = INTEGER, BUS = S_AXI
PARAMETER C_S_AXI_ADDR_WIDTH = 32, DT = INTEGER, BUS = S_AXI
PARAMETER C_S_AXI_MIN_SIZE = 0x000001ff, DT = std_logic_vector, BUS = S_AXI
PARAMETER C_USE_WSTRB = 0, DT = INTEGER
PARAMETER C_DPHASE_TIMEOUT = 8, DT = INTEGER
PARAMETER C_BASEADDR = 0xffffffff, DT = std_logic_vector, PAIR = C_HIGHADDR, ADDRESS = BASE, BUS = S_AXI
PARAMETER C_HIGHADDR = 0x00000000, DT = std_logic_vector, PAIR = C_BASEADDR, ADDRESS = HIGH, BUS = S_AXI
PARAMETER C_FAMILY = virtex6, DT = STRING
PARAMETER C_NUM_REG = 10, DT = INTEGER
PARAMETER C_NUM_MEM = 1, DT = INTEGER
PARAMETER C_SLV_AWIDTH = 32, DT = INTEGER
PARAMETER C_SLV_DWIDTH = 32, DT = INTEGER
PARAMETER C_S_AXI_PROTOCOL = AXI4LITE, TYPE = NON_HDL, ASSIGNMENT = CONSTANT, DT = STRING, BUS = S_AXI

## Ports
PORT dma_clk = "", DIR = I
PORT dma_valid = "", DIR = O
PORT dma_data = "", DIR = O, VEC = [31:0]
PORT dma_be = "", DIR = O, VEC = [3:0]
PORT dma_last = "", DIR = O
PORT dma_ready = "", DIR = I
PORT adc_clk_ab_p = "", DIR = I
PORT adc_clk_ab_n = "", DIR = I
PORT adc_cha_p = "", DIR = I, VEC = [6:0]
PORT adc_cha_n = "", DIR = I, VEC = [6:0]
PORT adc_chb_p = "", DIR = I, VEC = [6:0]
PORT adc_chb_n = "", DIR = I, VEC = [6:0]
PORT dac_dclk_p = "", DIR = O
PORT dac_dclk_n = "", DIR = O
PORT dac_data_p = "", DIR = O, VEC = [7:0]
PORT dac_data_n = "", DIR = O, VEC = [7:0]
PORT dac_frame_p = "", DIR = O
PORT dac_frame_n = "", DIR = O
PORT txenable = "", DIR = O
PORT clk_to_fpga_p = "", DIR = I
PORT clk_to_fpga_n = "", DIR = I
PORT ext_trigger_p = "", DIR = I
PORT ext_trigger_n = "", DIR = I
PORT spi_sclk = "", DIR = O
PORT spi_sdata = "", DIR = O
PORT adc_n_en = "", DIR = O
PORT adc_sdo = "", DIR = I
PORT adc_reset = "", DIR = O
PORT cdce_n_en = "", DIR = O
PORT cdce_sdo = "", DIR = I
PORT cdce_n_reset = "", DIR = O
PORT cdce_n_pd = "", DIR = O
PORT cdce_ref_en = "", DIR = O
PORT cdce_pll_status = "", DIR = I
PORT dac_n_en = "", DIR = O
PORT dac_sdo = "", DIR = I
PORT mon_n_en = "", DIR = O
PORT mon_sdo = "", DIR = I
PORT mon_n_reset = "", DIR = O
PORT mon_n_int = "", DIR = I
PORT prsnt_m2c_l = "", DIR = I
PORT rst = "", DIR = I
PORT clk_100Mhz = "", DIR = I
PORT clk_200Mhz = "", DIR = I
PORT adc_dout_o = "", DIR = O, VEC = [31:0]
PORT clk_adc_o = "", DIR = O
PORT up_status = "", DIR = O, VEC = [3:0]
PORT debug_clk = "", DIR = O
PORT debug_data = "", DIR = O, VEC = [255:0]
PORT debug_trigger = "", DIR = O, VEC = [15:0]
PORT S_AXI_ACLK = ACLK, DIR = I, SIGIS = CLK, BUS = S_AXI
PORT S_AXI_ARESETN = ARESETN, DIR = I, SIGIS = RST, BUS = S_AXI
PORT S_AXI_AWADDR = AWADDR, DIR = I, VEC = [(C_S_AXI_ADDR_WIDTH-1):0], ENDIAN = LITTLE, BUS = S_AXI
PORT S_AXI_AWVALID = AWVALID, DIR = I, BUS = S_AXI
PORT S_AXI_WDATA = WDATA, DIR = I, VEC = [(C_S_AXI_DATA_WIDTH-1):0], ENDIAN = LITTLE, BUS = S_AXI
PORT S_AXI_WSTRB = WSTRB, DIR = I, VEC = [((C_S_AXI_DATA_WIDTH/8)-1):0], ENDIAN = LITTLE, BUS = S_AXI
PORT S_AXI_WVALID = WVALID, DIR = I, BUS = S_AXI
PORT S_AXI_BREADY = BREADY, DIR = I, BUS = S_AXI
PORT S_AXI_ARADDR = ARADDR, DIR = I, VEC = [(C_S_AXI_ADDR_WIDTH-1):0], ENDIAN = LITTLE, BUS = S_AXI
PORT S_AXI_ARVALID = ARVALID, DIR = I, BUS = S_AXI
PORT S_AXI_RREADY = RREADY, DIR = I, BUS = S_AXI
PORT S_AXI_ARREADY = ARREADY, DIR = O, BUS = S_AXI
PORT S_AXI_RDATA = RDATA, DIR = O, VEC = [(C_S_AXI_DATA_WIDTH-1):0], ENDIAN = LITTLE, BUS = S_AXI
PORT S_AXI_RRESP = RRESP, DIR = O, VEC = [1:0], BUS = S_AXI
PORT S_AXI_RVALID = RVALID, DIR = O, BUS = S_AXI
PORT S_AXI_WREADY = WREADY, DIR = O, BUS = S_AXI
PORT S_AXI_BRESP = BRESP, DIR = O, VEC = [1:0], BUS = S_AXI
PORT S_AXI_BVALID = BVALID, DIR = O, BUS = S_AXI
PORT S_AXI_AWREADY = AWREADY, DIR = O, BUS = S_AXI

END
